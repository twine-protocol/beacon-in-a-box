services:
  generator:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        - APP_NAME=pulse_generator
    environment:
      - LOG_LEVEL=debug
      - RNG_SCRIPT=python3 /app/python_example/get_randomness.py
      - RNG_STORAGE_PATH=/randomness
      - PRIVATE_KEY_PATH=/data/key.pem
      - STRAND_JSON_PATH=/data/bafyriqbxdqyijm63m3kg36khsfcoi2seliicqwakxowcstyzwjunwrog4rf2fchtmkbp4fdeedtjazemrrp46w2nztuiwmip2uyusxhwxzrbo.strand.json
      - STITCH_CONFIG_PATH=/data/stitch-map.yaml
      - LEAD_TIME_SECONDS=10
    volumes:
      - .twine:/data
      - randomness:/randomness
    command: ["/app/pulse_generator"]
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - internal

  data_sync:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        - APP_NAME=data_sync
    environment:
      - REMOTE_STORE_ADDRESS=http://host.docker.internal:8787
      - REMOTE_STORE_API_KEY=dev
      - LOG_LEVEL=debug
      - SYNC_PERIOD_SECONDS=30
    command: ["/app/data_sync"]
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - internal
      - external

  http_portal:
    build:
      context: .
      dockerfile: Dockerfile.base
      args:
        - APP_NAME=http_portal
    environment:
      - LOG_LEVEL=debug
    command: ["/app/http_portal"]
    ports:
      - "8080:80"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - internal
      - external

  db:
    image: mysql:9.2
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: twine
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - db:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d

volumes:
  # stores the next randomness to be used
  randomness:
  # stores the database data
  db:

networks:
  internal:
    internal: true
  external: